<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.aksw.rmltk</groupId>
		<artifactId>rmltk-bom</artifactId>
		<version>5.0.0-1-SNAPSHOT</version>
		<relativePath>rmltk-bom</relativePath>
	</parent>
	<artifactId>rmltk-parent</artifactId>
	<packaging>pom</packaging>
	<modules>
		<module>r2rml-resource-ontology</module>
		<module>r2rml-resource-w3c-testsuite</module>
		<module>r2rml-resource-shacl</module>
		<module>r2rml-common-vocab</module>
		<module>r2rml-jena-vocab</module>
		<module>r2rml-jena-api</module>
		<module>r2rml-jena-arq</module>
		<module>r2rml-jena-processor-jdbc</module>
		<module>r2rml-jena-testsuite-processor-core</module>
		<module>r2rml-jena-testsuite-processor-h2</module>
		<module>r2rml-jena-sql-transforms</module>
		<module>r2rmlx-jena-api</module>
		<module>r2rml-jena-plugin</module>
		<module>rml-jena-arq</module>
		<module>rmltk-picocli-cmds</module>
		<module>rmltk-cli</module>
		<module>rmltk-utils-parent</module>
		<module>rmltk-pkg-parent</module>
	</modules>
	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
			<resource>
				<directory>src/main/resources-filtered</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>com.amashchenko.maven.plugin</groupId>
				<artifactId>gitflow-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--
				<plugin>
					<groupId>com.amashchenko.maven.plugin</groupId>
					<artifactId>gitflow-maven-plugin</artifactId>
					<version>1.8.0</version>
					<configuration>
						<gitFlowConfig>
							<versionTagPrefix>v</versionTagPrefix>
						</gitFlowConfig>
					</configuration>
				</plugin>
				-->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.1</version>
					<configuration>
						<release>${maven.compiler.release}</release>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>3.0.1</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<phase>verify</phase>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.9.1</version>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<goals>
								<goal>jar</goal>
							</goals>
							<configuration>
								<failOnError>false</failOnError>
							</configuration>
						</execution>
					</executions>
					<configuration>
						<additionalparam>-Xdoclint:none</additionalparam>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.19</version>
					<configuration>
						<!-- <forkCount>1C</forkCount> -->
						<!-- <reuseForks>true</reuseForks> -->
						<useSystemClassLoader>false</useSystemClassLoader>
						<!-- <forkCount>1</forkCount> <reuseForks>false</reuseForks> -->
						<argLine>-Xms256m -Xmx512m</argLine>
						<testFailureIgnore>false</testFailureIgnore>
						<skipTests>false</skipTests>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>jdeb</artifactId>
					<groupId>org.vafer</groupId>
					<version>1.8</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>2.4.3</version>
					<executions>
						<!-- Run shade goal on package phase -->
						<execution>
							<phase>package</phase>
							<goals>
								<goal>shade</goal>
							</goals>
							<configuration>
								<!-- TODO Shading is currently needed for the debian packages, which 
									is slow and causes huge deployments -->
								<!-- The deb packaging should be modified to work similar to the 
									dockerfile maven plugin: -->
								<!-- Use the resource plugin to copy deps to a lib folder and adjust 
									the bash scripts -->
								<shadedArtifactAttached>true</shadedArtifactAttached>
								<shadedClassifierName>jar-with-dependencies</shadedClassifierName>
								<filters>
									<filter>
										<artifact>*:*</artifact>
										<excludes>
											<exclude>META-INF/*.SF</exclude>
											<exclude>META-INF/*.DSA</exclude>
											<exclude>META-INF/*.RSA</exclude>
										</excludes>
									</filter>
								</filters>
								<transformers>
									<transformer
										implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
									<!-- add Main-Class to manifest file -->
									<!-- <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer"> -->
									<!-- <mainClass>com.mkyong.core.utils.App</mainClass> -->
									<!-- </transformer> -->
								</transformers>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>1.6</version>
					<executions>
						<execution>
							<id>sign-artifacts</id>
							<phase>verify</phase>
							<goals>
								<goal>sign</goal>
							</goals>
							<configuration>
								<keyname>AKSW</keyname>
								<passphraseServerId>${gpg.keyname}</passphraseServerId>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.sonatype.plugins</groupId>
					<artifactId>nexus-staging-maven-plugin</artifactId>
					<version>1.6.8</version>
					<extensions>true</extensions>
					<configuration>
						<serverId>ossrh</serverId>
						<nexusUrl>https://oss.sonatype.org/</nexusUrl>
						<autoReleaseAfterClose>true</autoReleaseAfterClose>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>3.0.2</version>
					<executions>
						<execution>
							<phase>prepare-package</phase>
							<!-- <phase>package</phase> -->
							<goals>
								<goal>copy-dependencies</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<!-- <useBaseVersion>false</useBaseVersion> -->
						<overWriteReleases>false</overWriteReleases>
						<overWriteSnapshots>true</overWriteSnapshots>
						<includeScope>runtime</includeScope>
						<outputDirectory>${project.build.directory}/lib</outputDirectory>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<profiles>
		<!-- <profile> <id>doclint-java8-disable</id> <activation> <jdk>[1.8,)</jdk> 
			</activation> <build> <plugins> <plugin> <groupId>org.apache.maven.plugins</groupId> 
			<artifactId>maven-javadoc-plugin</artifactId> <version>2.10.4</version> <executions> 
			<execution> <id>attach-javadocs</id> <goals> <goal>jar</goal> </goals> <configuration> 
			<failOnError>false</failOnError> </configuration> </execution> </executions> 
			<configuration> <additionalparam>-Xdoclint:none</additionalparam> </configuration> 
			</plugin> </plugins> </build> </profile> -->
		<profile>
			<id>release-aksw</id>
			<distributionManagement>
				<repository>
					<id>maven.aksw.internal</id>
					<name>AKSW Internal Release Repository</name>
					<url>https://maven.aksw.org/repository/internal</url>
				</repository>
			</distributionManagement>
		</profile>
		<profile>
			<id>release</id>
			<distributionManagement>
				<repository>
					<id>ossrh</id>
					<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
				</repository>
			</distributionManagement>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.sonatype.plugins</groupId>
						<artifactId>nexus-staging-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<repositories>
		<repository>
			<id>maven.aksw.internal</id>
			<name>University Leipzig, AKSW Maven2 Internal Repository</name>
			<url>https://maven.aksw.org/repository/internal/</url>
		</repository>
		<repository>
			<id>maven.aksw.snapshots</id>
			<name>University Leipzig, AKSW Maven2 Snapshot Repository</name>
			<url>https://maven.aksw.org/repository/snapshots/</url>
		</repository>
		<!-- Repo for latest jena snapshots -->
		<repository>
			<id>apache-repo-snapshots</id>
			<url>https://repository.apache.org/content/repositories/snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	<distributionManagement>
		<snapshotRepository>
			<id>maven.aksw.snapshots</id>
			<name>AKSW Snapshot Repository</name>
			<url>https://maven.aksw.org/repository/snapshots</url>
		</snapshotRepository>
	</distributionManagement>
</project>
